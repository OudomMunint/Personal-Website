function showIt() {
  const e = document.querySelectorAll(".booger"),
    t = window.innerHeight / 2.4;
  e.forEach((e, n) => {
    window.scrollY, window.innerHeight;
    e.offsetTop - window.scrollY < t
      ? e.classList.add("scrolled")
      : e.classList.remove("scrolled");
  });
}
// window.onload = function () {
//   async function init() {
//     const e = document.querySelector("#type-text");
//     for (await sleep(1e3), e.innerText = "", await e.type(""); ; )
//       await e.type("Welcome to my website!"),
//         await sleep(2e3),
//         await e.delete("Welcome to my website!"),
//         await e.type("Frontend developer"),
//         await sleep(2e3),
//         await e.delete("Unreal Engine developer"),
//         await e.type(".Net MAUI developer"),
//         await sleep(2e3),
//         await e.delete("Technoloy Enthusiast"),
//         await e.type("Unreal Engine Developer"),
//         await sleep(2e3),
//         await e.delete("Unreal Engine developer"),
//         await e.type("Technology Enthusiast"),
//         await sleep(2e3),
//         await e.delete("Technology Enthusiast");
//   }

//   init();
// };

$(window).load(function () {
  $(".preloader").fadeOut(1e3);
}),
  $(document).ready(function () {
    $(".navbar-collapse a").click(function () {
      $(".navbar-collapse").collapse("hide");
    }),
      $(window).scroll(function () {
        $(".navbar").offset().top > 0
          ? ($(".navbar-fixed-top").addClass("top-nav-collapse"),
            $(".navbar-fixed-top").removeClass("navbar-transparent"))
          : ($(".navbar-fixed-top").removeClass("top-nav-collapse"),
            $(".navbar-fixed-top").addClass("navbar-transparent"));
      }),
      $("#home").parallax("100%", 0.1),
      $("#about").parallax("100%", 0.3),
      $("#service").parallax("100%", 0.2),
      $("#experience").parallax("100%", 0.3),
      $("#education").parallax("100%", 0.1),
      $("#quotes").parallax("100%", 0.3),
      $("#contact").parallax("100%", 0.1),
      $("footer").parallax("100%", 0.2),

      $(function () {
        $(".custom-navbar a, #home a").bind("click", function (e) {
          var t = $(this);
          $("html, body")
            .stop()
            .animate({ scrollTop: $(t.attr("href")).offset().top - 49 }, 1e3),
            e.preventDefault();
        });
      }),
      new WOW({ mobile: !1 }).init();
  }),
  //   $(function () {
  //     new WOW().init(), $(".rotate").textrotator();
  //   }),

  window.addEventListener("scroll", showIt),
  (function () {
    function e(e) {
      (this.element = e),
        (this.blocks =
          this.element.getElementsByClassName("cd-timeline__block")),
        (this.images = this.element.getElementsByClassName("cd-timeline__img")),
        (this.contents = this.element.getElementsByClassName(
          "cd-timeline__content"
        )),
        (this.offset = 0.8),
        this.hideBlocks();
    }
    (e.prototype.hideBlocks = function () {
      if (!(!1 in document.documentElement))
        for (var e = this, t = 0; t < this.blocks.length; t++)
          !(function (t) {
            e.blocks[t].getBoundingClientRect().top >
              window.innerHeight * e.offset &&
              (e.images[t].classList.add("cd-timeline__img--hidden"),
              e.contents[t].classList.add("cd-timeline__content--hidden"));
          })(t);
    }),
      (e.prototype.showBlocks = function () {
        if (!(!1 in document.documentElement))
          for (var e = this, t = 0; t < this.blocks.length; t++)
            !(function (t) {
              e.contents[t].classList.contains(
                "cd-timeline__content--hidden"
              ) &&
                e.blocks[t].getBoundingClientRect().top <=
                  window.innerHeight * e.offset &&
                (e.images[t].classList.add("cd-timeline__img--bounce-in"),
                e.contents[t].classList.add("cd-timeline__content--bounce-in"),
                e.images[t].classList.remove("cd-timeline__img--hidden"),
                e.contents[t].classList.remove("cd-timeline__content--hidden"));
            })(t);
      });
    var t = document.getElementsByClassName("js-cd-timeline"),
      n = [],
      o = !1;
    if (t.length > 0) {
      for (var i = 0; i < t.length; i++)
        !(function (o) {
          n.push(new e(t[o]));
        })(i);
      window.addEventListener("scroll", function (e) {
        o ||
          ((o = !0),
          window.requestAnimationFrame
            ? window.requestAnimationFrame(s)
            : setTimeout(s, 250));
      });
    }
    function s() {
      n.forEach(function (e) {
        e.showBlocks();
      }),
        (o = !1);
    }
  })(),
  setInterval(function () {
    let e = document.querySelector(".mask span[data-show]"),
      t =
        e.nextElementSibling ||
        document.querySelector(".mask span:first-child"),
      n = document.querySelector(".mask span[data-up]");
    n && n.removeAttribute("data-up"),
      e.removeAttribute("data-show"),
      e.setAttribute("data-up", " "),
      t.setAttribute("data-show", " ");
  }, 1500);
const sleep = (e) => new Promise((t) => setTimeout(t, e));
class TypeAsync extends HTMLSpanElement {
  get typeInterval() {
    const e = 100 * Math.random();
    return e < 50 ? 10 : e;
  }
  async type(e) {
    for (let t of e) (this.innerText += t), await sleep(this.typeInterval);
  }
  async delete(e) {
    for (let t of e)
      (this.innerText = this.innerText.slice(0, this.innerText.length - 1)),
        await sleep(this.typeInterval);
  }
}
function showIt() {
  const e = document.querySelectorAll(".booger"),
    t = window.innerHeight / 2.4;
  e.forEach((e, n) => {
    window.scrollY, window.innerHeight;
    e.offsetTop - window.scrollY < t
      ? e.classList.add("scrolled")
      : e.classList.remove("scrolled");
  });
}

function init() {
  // do something here
}

// define custom element
customElements.define("type-async", TypeAsync, { extends: "span" });

// call init function
init();

// add scroll event listeners
window.addEventListener("scroll", showIt);


//Return to top
const scrollToTopBtn = document.getElementById("return-to-top");

scrollToTopBtn.addEventListener("click", () => {
  window.scrollTo({
    top: 0,
    behavior: "smooth"
  });
});

$(window).scroll(function () {
  $(this).scrollTop() >= 50
    ? $("#return-to-top").fadeIn(200)
    : $("#return-to-top").fadeOut(200);
});


const DOT_RADIUS = 24,
  SCALE = 0.85,
  MIN_SPEED = 7e-4,
  MOUSE_SPEED = 0.01;
let svgs = document.getElementById("svg-container"),
  COLORS = Array(svgs.children.length),
  PATHS = [...svgs.children].map(
    (e, t) => (
      "g" == e.children[0].tagName
        ? ((e = e.children[0]),
          (COLORS[t] = Array(e.children.length)),
          (COLORS[t][0] = e.getAttribute("fill")))
        : (COLORS[t] = Array(e.children.length)),
      [...e.children].map((e, n) => {
        let o = e.getAttribute("fill");
        return (
          null !== o
            ? (console.log("test"), (COLORS[t][n] = o))
            : (COLORS[t][n] = COLORS[t][0] ? COLORS[t][0] : "#FFF"),
          new Path2D(e.getAttribute("d"))
        );
      })
    )
  );
const SAMPLES = PATHS.length;
var canvas = document.getElementById("myCanvas"),
  ctx = canvas.getContext("2d");
let PERSPECTIVE,
  PROJECTION_CENTER_X,
  PROJECTION_CENTER_Y,
  GLOBE_RADIUS,
  width = canvas.offsetWidth,
  height = canvas.offsetHeight;
function onResize() {
  (PERSPECTIVE = 0.8 * width),
    (PROJECTION_CENTER_X = width / 2),
    (PROJECTION_CENTER_Y = height / 2),
    (GLOBE_RADIUS = width / 4),
    (width = canvas.offsetWidth),
    (height = canvas.offsetHeight),
    window.devicePixelRatio > 1
      ? ((canvas.width = 2 * canvas.clientWidth),
        (canvas.height = 2 * canvas.clientHeight),
        ctx.scale(2, 2))
      : ((canvas.width = width), (canvas.height = height));
}
window.addEventListener("resize", onResize), onResize();
let PHI = Math.PI * (3 - Math.sqrt(5)),
  VX = 7e-4,
  VY = 7e-4,
  VZ = 7e-4,
  mouse_x = 0,
  mouse_y = 0,
  mouse_moving = !1;
canvas.addEventListener("mousemove", (e) => {
  (mouse_moving = !0),
    (mouse_x = e.offsetX - width / 2),
    (mouse_y = e.offsetY - height / 2),
    (VY = (0.01 * mouse_x) / width),
    (VZ = (0.01 * mouse_y) / height);
}),
  canvas.addEventListener(
    "mouseout",
    function (e) {
      mouse_moving = !1;
      let t =
        -1 * Math.atan2(mouse_y - height / 2, mouse_x - width / 2) +
        0.5 * Math.PI;
      console.log(t);
      Math.cos(t), Math.sin(t);
      !(function e() {
        mouse_moving ||
          ((VZ /= 1.3),
          (VY /= 1.3),
          Math.abs(VZ) <= 7e-4 && (VZ = 7e-4 * Math.sign(VZ)),
          Math.abs(VY) <= 7e-4 && (VY = 7e-4 * Math.sign(VY)),
          7e-4 != VZ && 7e-4 != VY && setTimeout(e, 200));
      })();
    },
    !1
  );
class Dot {
  constructor(e, t) {
    (this.colors = COLORS[e]), (this.y = 1 - (e / (SAMPLES - 1)) * 2);
    let n = Math.sqrt(1 - this.y * this.y);
    (this.theta = PHI * e),
      (this.x = Math.cos(this.theta) * n),
      (this.z = Math.sin(this.theta) * n),
      (this.paths = t),
      (this.xProjected = 0),
      (this.yProjected = 0),
      (this.scaleProjected = 0);
  }
  rotate() {
    let e = this.x * Math.cos(VX) - this.y * Math.sin(VX),
      t = this.x * Math.sin(VX) + this.y * Math.cos(VX),
      n = e * Math.cos(VY) - this.z * Math.sin(VY),
      o = e * Math.sin(VY) + this.z * Math.cos(VY),
      i = t * Math.cos(VZ) - o * Math.sin(VZ),
      s = t * Math.sin(VZ) + o * Math.cos(VZ);
    (this.x = n), (this.y = i), (this.z = s);
  }
  project() {
    this.rotate(),
      (this.scaleProjected =
        PERSPECTIVE / (PERSPECTIVE + this.z * GLOBE_RADIUS)),
      (this.xProjected =
        this.x * GLOBE_RADIUS * this.scaleProjected +
        PROJECTION_CENTER_X -
        24 * this.scaleProjected),
      (this.yProjected =
        this.y * GLOBE_RADIUS * this.scaleProjected +
        PROJECTION_CENTER_Y -
        24 * this.scaleProjected);
  }
  draw() {
    this.project(),
      ctx.save(),
      (ctx.globalAlpha = Math.abs(1 - (3 * this.z * GLOBE_RADIUS) / width)),
      ctx.beginPath(),
      ctx.translate(this.xProjected, this.yProjected),
      ctx.scale(
        (0.85 * this.scaleProjected * width) / 1920,
        (0.85 * this.scaleProjected * width) / 1920
      ),
      this.paths.forEach((e, t) => {
        (ctx.fillStyle = this.colors[t]), ctx.fill(e);
      }),
      ctx.restore();
  }
}
const dots = PATHS.map((e, t) => new Dot(t, e));
function render() {
  (ctx.fillStyle = "black"),
    ctx.fillRect(0, 0, width, height),
    dots.sort((e, t) => e.scaleProjected - t.scaleProjected),
    dots.forEach((e) => {
      e.draw();
    }),
    window.requestAnimationFrame(render);
}
render(),
  (function (e) {
    var t = e(window),
      n = t.height();
    t.resize(function () {
      n = t.height();
    }),
      (e.fn.parallax = function (o, i, s) {
        var a,
          l,
          r = e(this);
        function c() {
          r.each(function () {
            l = r.offset().top;
          }),
            (a = s
              ? function (e) {
                  return e.outerHeight(!0);
                }
              : function (e) {
                  return e.height();
                }),
            (arguments.length < 1 || null === o) && (o = "50%"),
            (arguments.length < 2 || null === i) && (i = 0.5),
            (arguments.length < 3 || null === s) && (s = !0);
          var c = t.scrollTop();
          r.each(function () {
            var t = e(this),
              s = t.offset().top;
            s + a(t) < c ||
              s > c + n ||
              r.css(
                "backgroundPosition",
                o + " " + Math.round((l - c) * i) + "px"
              );
          });
        }
        t.bind("scroll", c).resize(c), c();
      });
  })(jQuery),
  window.jQuery ||
    alert(
      "The jQuery library must be included before the smoothscroll.js file.  The plugin will not work propery."
    ),
  (function (e) {
    var t = (e.scrollTo = function (t, n, o) {
      e(window).scrollTo(t, n, o);
    });
    function n(e) {
      return "object" == typeof e ? e : { top: e, left: e };
    }
    (t.defaults = {
      axis: "xy",
      duration: parseFloat(e.fn.jquery) >= 1.3 ? 0 : 1,
      limit: !0,
    }),
      (t.window = function (t) {
        return e(window)._scrollable();
      }),
      (e.fn._scrollable = function () {
        return this.map(function () {
          var t = this;
          if (
            !(
              !t.nodeName ||
              -1 !=
                e.inArray(t.nodeName.toLowerCase(), [
                  "iframe",
                  "#document",
                  "html",
                  "body",
                ])
            )
          )
            return t;
          var n = (t.contentWindow || t).document || t.ownerDocument || t;
          return /webkit/i.test(navigator.userAgent) ||
            "BackCompat" == n.compatMode
            ? n.body
            : n.documentElement;
        });
      }),
      (e.fn.scrollTo = function (o, i, s) {
        return (
          "object" == typeof i && ((s = i), (i = 0)),
          "function" == typeof s && (s = { onAfter: s }),
          "max" == o && (o = 9e9),
          (s = e.extend({}, t.defaults, s)),
          (i = i || s.duration),
          (s.queue = s.queue && s.axis.length > 1),
          s.queue && (i /= 2),
          (s.offset = n(s.offset)),
          (s.over = n(s.over)),
          this._scrollable()
            .each(function () {
              if (null != o) {
                var a,
                  l = this,
                  r = e(l),
                  c = o,
                  h = {},
                  d = r.is("html,body");
                switch (typeof c) {
                  case "number":
                  case "string":
                    if (/^([+-]=)?\d+(\.\d+)?(px|%)?$/.test(c)) {
                      c = n(c);
                      break;
                    }
                    if (!(c = e(c, this)).length) return;
                  case "object":
                    (c.is || c.style) && (a = (c = e(c)).offset());
                }
                e.each(s.axis.split(""), function (e, n) {
                  var o = "x" == n ? "Left" : "Top",
                    i = o.toLowerCase(),
                    f = "scroll" + o,
                    m = l[f],
                    w = t.max(l, n);
                  if (a)
                    (h[f] = a[i] + (d ? 0 : m - r.offset()[i])),
                      s.margin &&
                        ((h[f] -= parseInt(c.css("margin" + o)) || 0),
                        (h[f] -= parseInt(c.css("border" + o + "Width")) || 0)),
                      (h[f] += s.offset[i] || 0),
                      s.over[i] &&
                        (h[f] +=
                          c["x" == n ? "width" : "height"]() * s.over[i]);
                  else {
                    var p = c[i];
                    h[f] =
                      p.slice && "%" == p.slice(-1)
                        ? (parseFloat(p) / 100) * w
                        : p;
                  }
                  s.limit &&
                    /^\d+$/.test(h[f]) &&
                    (h[f] = h[f] <= 0 ? 0 : Math.min(h[f], w)),
                    !e &&
                      s.queue &&
                      (m != h[f] && u(s.onAfterFirst), delete h[f]);
                }),
                  u(s.onAfter);
              }
              function u(e) {
                r.animate(
                  h,
                  i,
                  s.easing,
                  e &&
                    function () {
                      e.call(this, o, s);
                    }
                );
              }
            })
            .end()
        );
      }),
      (t.max = function (t, n) {
        var o = "x" == n ? "Width" : "Height",
          i = "scroll" + o;
        if (!e(t).is("html,body")) return t[i] - e(t)[o.toLowerCase()]();
        var s = "client" + o,
          a = t.ownerDocument.documentElement,
          l = t.ownerDocument.body;
        return Math.max(a[i], l[i]) - Math.min(a[s], l[s]);
      });
  })(jQuery),
  (function (e) {
    function t(t, n, o) {
      var i = n.hash.slice(1),
        s = document.getElementById(i) || document.getElementsByName(i)[0];
      if (s) {
        t && t.preventDefault();
        var a = e(o.target);
        if (
          !(
            (o.lock && a.is(":animated")) ||
            (o.onBefore && !1 === o.onBefore(t, s, a))
          )
        ) {
          if ((o.stop && a._scrollable().stop(!0), o.hash)) {
            t = s.id == i ? "id" : "name";
            var l = e("<a> </a>")
              .attr(t, i)
              .css({
                position: "absolute",
                top: e(window).scrollTop(),
                left: e(window).scrollLeft(),
              });
            (s[t] = ""),
              e("body").prepend(l),
              (location = n.hash),
              l.remove(),
              (s[t] = i);
          }
          a.scrollTo(s, o).trigger("notify.serialScroll", [s]);
        }
      }
    }
    var n = location.href.replace(/#.*/, ""),
      o = (e.localScroll = function (t) {
        e("body").localScroll(t);
      });
    (o.defaults = {
      duration: 1e3,
      axis: "y",
      event: "click",
      stop: !0,
      target: window,
      reset: !0,
    }),
      (o.hash = function (n) {
        if (location.hash) {
          if ((((n = e.extend({}, o.defaults, n)).hash = !1), n.reset)) {
            var i = n.duration;
            delete n.duration, e(n.target).scrollTo(0, n), (n.duration = i);
          }
          t(0, location, n);
        }
      }),
      (e.fn.localScroll = function (i) {
        function s() {
          return (
            !!this.href &&
            !!this.hash &&
            this.href.replace(this.hash, "") == n &&
            (!i.filter || e(this).is(i.filter))
          );
        }
        return (i = e.extend({}, o.defaults, i)).lazy
          ? this.bind(i.event, function (n) {
              var o = e([n.target, n.target.parentNode]).filter(s)[0];
              o && t(n, o, i);
            })
          : this.find("a,area")
              .filter(s)
              .bind(i.event, function (e) {
                t(e, this, i);
              })
              .end()
              .end();
      });
  })(jQuery),
  jQuery(function (e) {
    e.localScroll({ filter: ".smoothScroll" });
  });
