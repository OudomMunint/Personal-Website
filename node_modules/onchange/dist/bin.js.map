{"version":3,"file":"bin.js","sourceRoot":"","sources":["../src/bin.ts"],"names":[],"mappings":"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","sourcesContent":["#!/usr/bin/env node\n\nimport { onchange } from \".\";\nimport ignore from \"ignore\";\nimport { readFileSync, statSync } from \"fs\";\nimport { resolve, relative } from \"path\";\nimport arg from \"arg\";\n\n// Extract `onchange` args and command args after `--`.\nconst [argv, command] = getArgs(process.argv.slice(2));\n\nconst args = arg(\n  {\n    \"--add\": Boolean,\n    \"--await-write-finish\": Number,\n    \"--cwd\": String,\n    \"--delay\": Number,\n    \"--exclude-path\": String,\n    \"--exclude\": [String],\n    \"--filter\": [String],\n    \"--help\": Boolean,\n    \"--initial\": Boolean,\n    \"--jobs\": Number,\n    \"--kill-signal\": String,\n    \"--kill\": Boolean,\n    \"--no-exclude\": Boolean,\n    \"--outpipe\": String,\n    \"--poll\": Number,\n    \"--verbose\": Boolean,\n    \"-a\": \"--add\",\n    \"-c\": \"--cwd\",\n    \"-d\": \"--delay\",\n    \"-e\": \"--exclude\",\n    \"-f\": \"--filter\",\n    \"-h\": \"--help\",\n    \"-i\": \"--initial\",\n    \"-j\": \"--jobs\",\n    \"-k\": \"--kill\",\n    \"-o\": \"--outpipe\",\n    \"-p\": \"--poll\",\n    \"-v\": \"--verbose\",\n  },\n  {\n    argv,\n  }\n);\n\nconst {\n  _: matches,\n  \"--add\": add,\n  \"--await-write-finish\": awaitWriteFinish,\n  \"--cwd\": cwd = process.cwd(),\n  \"--delay\": delay,\n  \"--exclude-path\": excludePath,\n  \"--filter\": filter,\n  \"--help\": help,\n  \"--initial\": initial,\n  \"--jobs\": jobs,\n  \"--kill-signal\": killSignal,\n  \"--kill\": kill,\n  \"--outpipe\": outpipe,\n  \"--poll\": poll,\n  \"--verbose\": verbose,\n} = args;\nconst exclude = getExclude(cwd, args[\"--exclude\"], args[\"--exclude-path\"]);\nconst defaultExclude = !args[\"--no-exclude\"];\n\n// Print usage info\nif (!args._.length || help) {\n  console.log(\"Usage: onchange [...file] -- <command> [...args]\");\n  process.exit();\n}\n\n// Validate command or outpipe is specified.\nif (!command.length && !outpipe) {\n  console.error('Remember to pass the command after \"--\":');\n  console.error(\"  onchange '**/*.js' -- echo '{{changed}}'\");\n  process.exit(1);\n}\n\n// Validate kill signal.\nif (\n  killSignal !== undefined &&\n  killSignal !== \"SIGINT\" &&\n  killSignal !== \"SIGKILL\"\n) {\n  console.error('Kill signal must be one of \"SIGINT\", \"SIGKILL\".');\n  process.exit(1);\n}\n\n// Start watcher.\nonchange({\n  add,\n  awaitWriteFinish,\n  command,\n  cwd,\n  defaultExclude,\n  delay,\n  exclude,\n  filter,\n  initial,\n  jobs,\n  kill,\n  killSignal,\n  matches,\n  outpipe,\n  poll,\n  verbose,\n});\n\nfunction getExclude(cwd: string, exclude?: string[], excludePath?: string) {\n  if (!excludePath) return exclude || [];\n  const excludeFn = getExcludeFunction(cwd, excludePath);\n  if (exclude) return [...exclude, excludeFn];\n  return [excludeFn];\n}\n\n/**\n * Build an exclude function from path.\n */\nfunction getExcludeFunction(cwd: string, excludePath: string) {\n  if (isFileSync(excludePath)) {\n    const ignorer = ignore();\n    ignorer.add(readFileSync(excludePath, \"utf8\"));\n\n    return function (path: string) {\n      const relPath = relative(cwd, path);\n      return relPath ? ignorer.ignores(relPath) : false;\n    };\n  }\n\n  console.error(\"Unable to load file from `--exclude-path`:\");\n  console.error(\"  \" + resolve(excludePath));\n  process.exit(1);\n}\n\n/**\n * Check if a file exists.\n */\nfunction isFileSync(path: string) {\n  try {\n    return statSync(path).isFile();\n  } catch (e) {\n    return false;\n  }\n}\n\n/**\n * Get program args from `argv`.\n */\nfunction getArgs(args: string[]): [string[], string[]] {\n  const index = args.indexOf(\"--\");\n  if (index) return [args.slice(0, index), args.slice(index + 1)];\n  return [args, []];\n}\n"]}